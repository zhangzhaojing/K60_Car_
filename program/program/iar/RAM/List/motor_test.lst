###############################################################################
#
# IAR ANSI C/C++ Compiler V8.10.1.12857/W32 for ARM       30/Dec/2017  19:25:56
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\19071_000\Desktop\K60_Car\program\program\app\motor_test.c
#    Command line =  
#        -f C:\Users\19071_~1\AppData\Local\Temp\EWEB87.tmp
#        (C:\Users\19071_000\Desktop\K60_Car\program\program\app\motor_test.c
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\RAM\List -lB
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\RAM\List -o
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\RAM\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\app\ -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\common\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\USB\class\
#        -I
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\..\..\..\lib\peripheral\
#        -Ol -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\Include\" -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\RAM\List\motor_test.lst
#    Object file  =  
#        C:\Users\19071_000\Desktop\K60_Car\program\program\iar\RAM\Obj\motor_test.o
#
###############################################################################

C:\Users\19071_000\Desktop\K60_Car\program\program\app\motor_test.c
      1          #include "program.h"
      2          

   \                                 In section .data, align 4
      3          static motor_controller_t mtrctrl = {
   \                     mtrctrl:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0x0000000A         DC32 10
   \   00000008   0x01 0x02          DC8 1, 2, 0, 0
   \              0x00 0x00    
   \   0000000C   0x40038000         DC32 40038000H
   \   00000010   0x00 0x3D          DC8 0, 61, 0, 0
   \              0x00 0x00    
   \   00000014   0x00007530         DC32 30000, 40038000H
   \              0x40038000   
   \   0000001C   0x01 0x3E          DC8 1, 62, 0, 0
   \              0x00 0x00    
   \   00000020   0x00007530         DC32 30000, 40038000H
   \              0x40038000   
   \   00000028   0x02 0x3F          DC8 2, 63, 0, 0
   \              0x00 0x00    
   \   0000002C   0x00007530         DC32 30000, 40038000H
   \              0x40038000   
   \   00000034   0x03 0x40          DC8 3, 64, 0, 0
   \              0x00 0x00    
   \   00000038   0x00007530         DC32 30000
   \   0000003C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000004C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000005C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000006C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000007C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
      4              PIT0, 10, 
      5              {LPTMR_ALT1}, {LPTMR_ALT2}, 
      6              {{FTM0, FTM_Ch0, PTC1, 30000},  {FTM0, FTM_Ch1, PTC2, 30000}, 
      7           {FTM0, FTM_Ch2, PTC3, 30000},{FTM0, FTM_Ch3, PTC4, 30000} /*RR*/   }
      8          };
      9          
     10          
     11          static void print_encoder(void){
     12          	printf("[INFO] ecd_placc_value= {left:%d, right:%d}\n", 
     13                  mtrctrl.ecdlft.signed_value, mtrctrl.ecdrgt.signed_value);
     14              printf("[INFO] ecd_mileage= {left:%d, right: %d}\n", 
     15                  mtrctrl.ecdlft.mileage, mtrctrl.ecdrgt.mileage);
     16          }
     17          

   \                                 In section .text, align 4, keep-with-next
     18          extern void app__motor_dev(void){
   \                     app__motor_dev: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     19          
     20          	motor_controller__config(&mtrctrl);
   \   00000002   0x4807             LDR.N    R0,??app__motor_dev_0
   \   00000004   0x.... 0x....      BL       motor_controller__config
     21              motor_controller__enable();
   \   00000008   0x.... 0x....      BL       motor_controller__enable
     22             
     23             
     24                  motor_controller__set_duty(LEFT_MOTOR, (int32)(2000.0f));
   \   0000000C   0xF44F 0x61FA      MOV      R1,#+2000
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       motor_controller__set_duty
     25                  motor_controller__set_duty(RIGHT_MOTOR, (int32)(-2000.0f));
   \   00000016   0x4903             LDR.N    R1,??app__motor_dev_0+0x4  ;; 0xfffff830
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       motor_controller__set_duty
     26                 // dummy_delay_ms(1000);
     27                 //  motor_controller__set_duty(LEFT_MOTOR, (int32)(0));
     28                  //motor_controller__set_duty(RIGHT_MOTOR, (int32)(0));   
     29                  
     30              //while(1){    
     31              	
     32              //}
     33          }
   \   0000001E   0xBD01             POP      {R0,PC}          ;; return
   \                     ??app__motor_dev_0:
   \   00000020   0x........         DC32     mtrctrl
   \   00000024   0xFFFFF830         DC32     0xfffff830

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   app__motor_dev
         8   -> motor_controller__config
         8   -> motor_controller__enable
         8   -> motor_controller__set_duty


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      40  app__motor_dev
     136  mtrctrl

 
 136 bytes in section .data
  40 bytes in section .text
 
  40 bytes of CODE memory
 136 bytes of DATA memory

Errors: none
Warnings: 1
